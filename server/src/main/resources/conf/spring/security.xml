<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <sec:http pattern="/version" security="none"/>

    <sec:http create-session="stateless" pattern="/admin/.*" authentication-manager-ref="adminAuthenticationManager" use-expressions="true" request-matcher="regex">
        <sec:anonymous/>

        <sec:intercept-url pattern="/admin/signin.*" access="permitAll" />
        <sec:intercept-url pattern="/admin/.*" access="authenticated" />

        <sec:form-login default-target-url="/admin/account.html"
                        authentication-failure-url="/admin/signin.html?error"
                        login-page="/admin/signin.html"
                        password-parameter="token"
                        username-parameter="email"
                        login-processing-url="/admin/signin"/>

        <sec:logout logout-success-url="/admin/signin.html"
                    logout-url="/admin/signout"
                    delete-cookies="JSESSIONID" />

        <sec:remember-me key="${admin.rememberMe.key}" services-ref="adminCustomRememberMeServices" />

        <sec:custom-filter after="REMEMBER_ME_FILTER" ref="adminAfterRememberMeFilter" />
    </sec:http>

    <sec:http create-session="stateless" pattern="/web/.*" authentication-manager-ref="authenticationManager" use-expressions="true" request-matcher="regex">
        <sec:anonymous/>

        <sec:intercept-url pattern="/web/doc.*" access="hasRole('DEV')" />
        <sec:intercept-url pattern="/web/api-docs.*" access="hasRole('DEV')" />
        <sec:intercept-url pattern="/web/reg_successful" access="permitAll"/>
        <sec:intercept-url pattern="/web/users/.*\?((activationToken=.*_method=PUT)|(_method=PUT.*activationToken=.*))" access="permitAll" method="GET" />
        <sec:intercept-url pattern="/web/users/.*(^\?((activationToken=.*_method=PUT)|(_method=PUT.*activationToken=.*)))" access="authenticated" method="GET" />
        <sec:intercept-url pattern="/web/assets/.*" access="permitAll" method="GET" />
        <sec:intercept-url pattern="/web/signup.*" access="permitAll" />
        <sec:intercept-url pattern="/web/signin.*" access="permitAll" />
        <sec:intercept-url pattern="/web/signout" access="permitAll" />
        <sec:intercept-url pattern="/web/restore_password.*" access="permitAll" />
        <sec:intercept-url pattern="/web/faq.*" access="permitAll" />
        <sec:intercept-url pattern="/web/terms.*" access="permitAll" />
        <sec:intercept-url pattern="/web/privacy_policy.*" access="permitAll" />
        <sec:intercept-url pattern="/web/error.*" access="permitAll" />
        <sec:intercept-url pattern="/web/internal_server_error.*" access="permitAll" />
        <sec:intercept-url pattern="/web/page_not_found.*" access="permitAll" />
        <sec:intercept-url pattern="/web/.*" access="authenticated" />

        <sec:custom-filter before="FORM_LOGIN_FILTER" ref="facebookAuthFilter" />

        <sec:form-login
                        authentication-success-handler-ref="accountSavedRequestAwareAuthSuccessHandler"
                        authentication-failure-url="/web/signin.html?error"
                        login-page="/web/signin.html"
                        password-parameter="token"
                        username-parameter="email"
                        login-processing-url="/web/signin"/>

        <sec:logout logout-success-url="/web/signin.html"
                    logout-url="/web/signout"
                    delete-cookies="JSESSIONID" />

        <sec:remember-me key="${rememberMe.key}" services-ref="customRememberMeServices" />

        <sec:custom-filter after="REMEMBER_ME_FILTER" ref="afterRememberMeFilter" />
    </sec:http>

    <sec:authentication-manager id="adminAuthenticationManager" alias="adminAuthenticationManager">
        <sec:authentication-provider user-service-ref="adminDetailsService">
            <sec:password-encoder ref="passwordEncoder">
                <sec:salt-source ref="saltSource" />
            </sec:password-encoder>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <sec:authentication-manager id="authenticationManager" alias="authenticationManager">
        <sec:authentication-provider user-service-ref="userDetailsService">
            <sec:password-encoder ref="passwordEncoder">
                <sec:salt-source ref="saltSource" />
            </sec:password-encoder>
        </sec:authentication-provider>

        <sec:authentication-provider ref="facebookUserDetailsAuthProvider"/>
    </sec:authentication-manager>

    <sec:authentication-manager id="authenticationManagerWithoutPasswordEncoder" alias="authenticationManagerWithoutPasswordEncoder">
        <sec:authentication-provider user-service-ref="userDetailsService">
        </sec:authentication-provider>
    </sec:authentication-manager>

    <bean id="saltSource"
          class="org.springframework.security.authentication.dao.ReflectionSaltSource"
          p:userPropertyToUse="username" />

    <bean id="customRememberMeServices"
          class="novotvir.security.service.impl.CustomTokenBasedRememberMeServicesImpl"
          p:cookieName="${rememberMe.cookieName}"
          p:tokenValiditySeconds="${rememberMe.tokenValiditySeconds}"
          p:alwaysRemember="true"
          p:successHandler-ref="rememberMeSuccessfulHandler"
          c:key="${rememberMe.key}"
          c:userDetailsService-ref="userDetailsService"/>

    <bean id="adminCustomRememberMeServices"
          class="novotvir.security.service.impl.CustomTokenBasedRememberMeServicesImpl"
          p:cookieName="${admin.rememberMe.cookieName}"
          p:tokenValiditySeconds="${admin.rememberMe.tokenValiditySeconds}"
          p:alwaysRemember="true"
          c:key="${admin.rememberMe.key}"
          c:userDetailsService-ref="adminDetailsService"/>

    <bean id="rememberMeSuccessfulHandler"
          class="novotvir.security.handler.impl.RememberMeSuccessfulHandler"
          p:userRepository-ref="userRepository" />

    <bean id="nullAuthoritiesMapper"
          class="org.springframework.security.core.authority.mapping.NullAuthoritiesMapper"/>

    <bean id="facebookUserDetailsAuthProvider"
          class="novotvir.security.social.facebook.provider.impl.FacebookUserDetailsAuthProviderImpl"
          p:facebookProfileRegService-ref="facebookProfileRegService"
          p:userDetailsService-ref="userDetailsService"
          p:authoritiesMapper-ref="nullAuthoritiesMapper"/>

    <bean id="facebookAuthFilter"
          class="novotvir.security.social.facebook.filter.impl.FacebookAuthFilterImpl"
          p:rememberMeServices-ref="customRememberMeServices"
          p:authenticationManager-ref="authenticationManager"
          p:authenticationSuccessHandler-ref="simpleUrlAuthenticationSuccessHandler"
          p:authenticationFailureHandler-ref="simpleUrlAuthenticationFailureHandler"
          p:facebookAuthUrlService-ref="facebookAuthUrlService"
          p:facebookProfileService-ref="facebookProfileService"
          c:defaultFilterProcessesUrl="/web/facebook_auth" />

    <bean id="simpleUrlAuthenticationSuccessHandler"
            class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
            p:defaultTargetUrl="/web/"
            p:alwaysUseDefaultTargetUrl="true"/>

    <bean id="simpleUrlAuthenticationFailureHandler"
            class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
            p:defaultFailureUrl="/web/signin.html?facebook_error=true" />

    <bean id="passwordEncoder" class="novotvir.security.encoder.impl.PasswordEncoderImpl" />

    <bean id="adminDetailsService"
          class="novotvir.security.service.impl.AdminDetailsServiceImpl"
          p:adminRepository-ref="adminRepository" />

    <bean id="userDetailsService"
          class="novotvir.security.service.impl.UserDetailsServiceImpl"
          p:userRepository-ref="userRepository" />

    <bean id="facebookRedirectUriService"
          class="novotvir.security.social.facebook.service.impl.FacebookRedirectUriServiceImpl"
          p:facebookRedirectUri="${facebook.connect.fbRedirectUrl}" />

    <bean id="facebookAuthUrlService"
          class="novotvir.security.social.facebook.service.impl.FacebookAuthUrlServiceImpl"
          p:facebookConnectionFactory-ref="facebookConnectionFactory"
          p:facebookRedirectUriService-ref="facebookRedirectUriService"/>

    <bean id="facebookProfileService"
          class="novotvir.security.social.facebook.service.impl.FacebookProfileServiceImpl"
          p:facebookConnectionFactory-ref="facebookConnectionFactory"
          p:facebookRedirectUriService-ref="facebookRedirectUriService"/>

    <bean id="facebookProfileRegService"
          class="novotvir.security.social.facebook.service.impl.FacebookProfileRegServiceImpl"
          p:userFacebookRegService-ref="userFacebookRegService"/>

    <bean id="afterRememberMeFilter"
          class="novotvir.security.filter.impl.AfterRememberMeFilter"
          p:tokenBasedRememberMeServices-ref="customRememberMeServices"/>

    <bean id="adminAfterRememberMeFilter"
          class="novotvir.security.filter.impl.AfterRememberMeFilter"
          p:tokenBasedRememberMeServices-ref="adminCustomRememberMeServices"/>

    <bean id="facebookConnectionFactory"
          class="org.springframework.social.facebook.connect.FacebookConnectionFactory"
          c:appId="${facebook.connect.fbAppId}"
          c:appSecret="${facebook.connect.fbAppSecret}"/>

    <bean id="accountSavedRequestAwareAuthSuccessHandler"
          class="novotvir.security.handler.impl.AccountSavedRequestAwareAuthSuccessHandler"
          p:alwaysUseDefaultTargetUrl="true"
          p:defaultTargetUrl="/web/"
          p:redirectStrategy-ref="redirectStrategy"/>

    <bean id="redirectStrategy" class="novotvir.security.strategy.impl.RedirectStrategy"/>

</beans>